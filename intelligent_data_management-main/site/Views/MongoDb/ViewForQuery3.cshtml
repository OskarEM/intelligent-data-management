@model SortViewModel<CustomerLifetimeValueViewModel>

@{
    ViewData["Title"] = "Customer Lifetime Value";
    int currentPage = ViewBag.CurrentPage as int? ?? 1;
    int totalPages = ViewBag.TotalPages as int? ?? 1;
    int startPage = Math.Max(1, currentPage - 2);
    int endPage = Math.Min(totalPages, currentPage + 4);
    int pageSize = ViewBag.PageSize as int? ?? 10;
}

<h1>@ViewData["Title"]</h1>
<p class="text-info">Currently sorted by: <strong>@Model.SortCriteria.FirstOrDefault()?.Field</strong> in <strong>@(Model.SortCriteria.FirstOrDefault()?.Direction.ToUpper())</strong> order.</p>

<p class="text-muted">Sort by clicking on the column headers.</p>
<table class="table">
    <thead>
    <tr>
               <th scope="col">
                               <a class="btn btn-light btn-block text-left" role="button"
                                  href="@Url.Action("CustomerLifetimeValue", new { sortField = "CustomerID", sortOrder = Model.SortCriteria.FirstOrDefault(c => c.Field == "CustomerID")?.Direction == "asc" ? "desc" : "asc" })">
                                   CustomerID
                                   @(Model.SortCriteria.FirstOrDefault(c => c.Field == "CustomerID")?.Direction == "asc" ? "↓" : "↑")
                               </a>
                           </th>
                           <th scope="col">
                               <a class="btn btn-light btn-block text-left" role="button"
                                  href="@Url.Action("CustomerLifetimeValue", new { sortField = "LifetimeValue", sortOrder = Model.SortCriteria.FirstOrDefault(c => c.Field == "LifetimeValue")?.Direction == "asc" ? "desc" : "asc" })">
                                   LifetimeValue
                                   @(Model.SortCriteria.FirstOrDefault(c => c.Field == "LifetimeValue")?.Direction == "asc" ? "↓" : "↑")
                               </a>
                           </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Data)
    {
        <tr>
            <td>@item.CustomerID</td>
            <td>@item.LifetimeValue</td> <!-- Format as currency -->
        </tr>
    }
    </tbody>
</table>
<div>
    @if (currentPage > 1)
    {
        <a asp-action="CustomerLifetimeValue" asp-controller="MongoDb"
           asp-route-pageNumber="@(currentPage - 1)" asp-route-pageSize="@pageSize"
           asp-route-sortField="@Model.SortCriteria.FirstOrDefault()?.Field"
           asp-route-sortOrder="@Model.SortCriteria.FirstOrDefault()?.Direction">
            Previous
        </a>
    }

    @for (int i = startPage; i <= endPage; i++)
    {
        <a asp-action="CustomerLifetimeValue" asp-controller="MongoDb"
           asp-route-pageNumber="@i" asp-route-pageSize="@pageSize"
           asp-route-sortField="@Model.SortCriteria.FirstOrDefault()?.Field"
           asp-route-sortOrder="@Model.SortCriteria.FirstOrDefault()?.Direction"
           class="@(i == currentPage ? "active" : "")">
            @i
        </a>
    }

    @if (currentPage < totalPages && Model.Data.Any())
    {
        <a asp-action="CustomerLifetimeValue" asp-controller="MongoDb"
           asp-route-pageNumber="@(currentPage + 1)" asp-route-pageSize="@pageSize"
           asp-route-sortField="@Model.SortCriteria.FirstOrDefault()?.Field"
           asp-route-sortOrder="@Model.SortCriteria.FirstOrDefault()?.Direction">
            Next
        </a>
    }
</div>
<a class="btn btn-danger" href="@Url.Action("QueryOptions", "MongoDb")">Back</a>
